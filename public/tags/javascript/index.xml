<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>javascript on Lost Among Notes</title>
    <link>https://blog.silvela.org/tags/javascript/</link>
    <description>Recent content in javascript on Lost Among Notes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 19 Apr 2020 09:48:11 +0200</lastBuildDate>
    
	<atom:link href="https://blog.silvela.org/tags/javascript/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Making Go JSON safe (for JavaScript)</title>
      <link>https://blog.silvela.org/post/2020-04-19-safe-go-json/</link>
      <pubDate>Sun, 19 Apr 2020 09:48:11 +0200</pubDate>
      
      <guid>https://blog.silvela.org/post/2020-04-19-safe-go-json/</guid>
      <description>Go has many things going for it. The marshalling package is generally one of them. Very well thought out and easy to use.
This package holds a surprise, though, when shipping JSON to software built with other languages: nil Go slices marshal to null rather than the empty array [], and nil maps marshal to null rather than the empty map {}.
These are not bugs. Indeed, in Go, nil is the zero value for slices as well as for maps.</description>
    </item>
    
    <item>
      <title>D3’s Messy Abstraction Path</title>
      <link>https://blog.silvela.org/post/d3-messy-abstraction/</link>
      <pubDate>Fri, 02 Dec 2016 21:45:19 +0100</pubDate>
      
      <guid>https://blog.silvela.org/post/d3-messy-abstraction/</guid>
      <description>D3 is a wonderful idea. A graphing library in Javascript that uses functional programming idioms, outputs SVG and is chock full of contributions from the community. No wonder it’s so popular.
And yet, D3 code has a tendency to grow unwieldy very quickly. As happens in SQL, the means of abstraction in the language (in our case in the library) are obscure, and details in “normal” code tend to pile up.</description>
    </item>
    
  </channel>
</rss>